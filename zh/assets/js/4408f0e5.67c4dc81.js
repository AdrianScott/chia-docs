"use strict";(self.webpackChunkchia_docs=self.webpackChunkchia_docs||[]).push([[8986],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function f(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?f(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):f(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},f=Object.keys(e);for(n=0;n<f.length;n++)a=f[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var f=Object.getOwnPropertySymbols(e);for(n=0;n<f.length;n++)a=f[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,f=e.originalType,o=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=d(a),m=r,u=p["".concat(o,".").concat(m)]||p[m]||c[m]||f;return a?n.createElement(u,l(l({ref:t},s),{},{components:a})):n.createElement(u,l({ref:t},s))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var f=a.length,l=new Array(f);l[0]=p;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var d=2;d<f;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294),r=a(6010);const f="tabItem_Ymn6";function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(f,l),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(7462),r=a(7294),f=a(6010),l=a(2389),i=a(7392),o=a(7094),d=a(2466);const s="tabList__CuJ",c="tabItem_LNqP";function p(e){var t;const{lazy:a,block:l,defaultValue:p,values:m,groupId:u,className:k}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=m??b.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),h=(0,i.l)(g,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const N=null===p?p:p??(null==(t=b.find((e=>e.props.default)))?void 0:t.props.value)??b[0].props.value;if(null!==N&&!g.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:_,setTabGroupChoices:y}=(0,o.U)(),[v,w]=(0,r.useState)(N),T=[],{blockElementScrollPositionUntilNextRender:x}=(0,d.o5)();if(null!=u){const e=_[u];null!=e&&e!==v&&g.some((t=>t.value===e))&&w(e)}const E=e=>{const t=e.currentTarget,a=T.indexOf(t),n=g[a].value;n!==v&&(x(t),w(n),null!=u&&y(u,String(n)))},O=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;a=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;a=T[t]??T[T.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,f.Z)("tabs-container",s)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,f.Z)("tabs",{"tabs--block":l},k)},g.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,key:t,ref:e=>T.push(e),onKeyDown:O,onFocus:E,onClick:E},l,{className:(0,f.Z)("tabs__item",c,null==l?void 0:l.className,{"tabs__item--active":v===t})}),a??t)}))),a?(0,r.cloneElement)(b.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}function m(e){const t=(0,l.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}},829:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>f,metadata:()=>i,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));a(5488),a(5162);const f={sidebar_label:"Offers",title:"Offer RPC",slug:"/offer-rpc"},l=void 0,i={unversionedId:"rpc-reference/offers",id:"rpc-reference/offers",title:"Offer RPC",description:"Note about Windows command escaping",source:"@site/docs/rpc-reference/offers.mdx",sourceDirName:"rpc-reference",slug:"/offer-rpc",permalink:"/zh/offer-rpc",draft:!1,editUrl:"https://github.com/Chia-Network/chia-docs/blob/main/docs/rpc-reference/offers.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Offers",title:"Offer RPC",slug:"/offer-rpc"},sidebar:"tutorialSidebar",previous:{title:"NFTs",permalink:"/zh/nft-rpc"},next:{title:"DataLayer",permalink:"/zh/datalayer-rpc"}},o={},d=[{value:"Reference",id:"reference",level:2},{value:"<code>create_offer_for_ids</code>",id:"create_offer_for_ids",level:3},{value:"<code>get_offer_summary</code>",id:"get_offer_summary",level:3},{value:"<code>check_offer_validity</code>",id:"check_offer_validity",level:3},{value:"<code>take_offer</code>",id:"take_offer",level:3},{value:"<code>get_offer</code>",id:"get_offer",level:3},{value:"<code>get_all_offers</code>",id:"get_all_offers",level:3},{value:"<code>cancel_offer</code>",id:"cancel_offer",level:3},{value:"<code>get_notifications</code>",id:"get_notifications",level:3},{value:"<code>delete_notifications</code>",id:"delete_notifications",level:3},{value:"<code>send_notification</code>",id:"send_notification",level:3},{value:"<code>sign_message_by_address</code>",id:"sign_message_by_address",level:3},{value:"<code>sign_message_by_id</code>",id:"sign_message_by_id",level:3}],s={toc:d};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Note about Windows command escaping"),(0,r.kt)("p",null,"This document will use Linux/MacOS RPC syntax. When running rpc commands on Windows, you'll need to escape all quotes with backslashes."),(0,r.kt)("p",null,"For example, here is a typical RPC command on Linux and MacOS:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},'chia rpc wallet create_new_wallet \'{"wallet_type": "nft_wallet"}\'\n')),(0,r.kt)("p",null,"To run the same command on Windows, you need to escape the quotes with backslashes. In other words, add a \\ before each double quote, such that:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'"wallet_type" becomes \\"wallet_type\\"'),(0,r.kt)("li",{parentName:"ul"},'"nft_wallet" becomes \\"nft_wallet\\"'),(0,r.kt)("li",{parentName:"ul"},"etc"))),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("h3",{id:"create_offer_for_ids"},(0,r.kt)("inlineCode",{parentName:"h3"},"create_offer_for_ids")),(0,r.kt)("p",null,"Creates a new offer."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"offer_dict"),": A dictionary of the offer to create."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"fee:")," An optional fee (in mojos) to include with the offer. Defaults to 0."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"validate_only:")," Defaults to False. Set to True to verify the validity of a potential offer, rather than actually creating an offer.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'async def create_offer_for_ids(\n  self, offer_dict: Dict[uint32, int], fee=uint64(0), validate_only: bool = False\n) -> Tuple[Optional[Offer], TradeRecord]:\n  send_dict: Dict[str, int] = {}\n  for key in offer_dict:\n    send_dict[str(key)] = offer_dict[key]\n\n  res = await self.fetch("create_offer_for_ids", {"offer": send_dict, "validate_only": validate_only, "fee": fee})\n  offer: Optional[Offer] = None if validate_only else Offer.from_bytes(hexstr_to_bytes(res["offer"]))\n  return offer, TradeRecord.from_json_dict_convenience(res["trade_record"], res["offer"])\n')),(0,r.kt)("h3",{id:"get_offer_summary"},(0,r.kt)("inlineCode",{parentName:"h3"},"get_offer_summary")),(0,r.kt)("p",null,"Returns the summary of a specific offer. Works for offers in any state."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"offer:")," The offer to summarize.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'async def get_offer_summary(self, offer: Offer) -> Dict[str, Dict[str, int]]:\n  res = await self.fetch("get_offer_summary", {"offer": bytes(offer).hex()})\n  return res["summary"]\n')),(0,r.kt)("h3",{id:"check_offer_validity"},(0,r.kt)("inlineCode",{parentName:"h3"},"check_offer_validity")),(0,r.kt)("p",null,"Checks whether a specific offer is valid."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"offer:")," The offer to check. The offer is considered valid if it is in any of the following states:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"PENDING_ACCEPT"),(0,r.kt)("li",{parentName:"ul"},"PENDING_CONFIRM"),(0,r.kt)("li",{parentName:"ul"},"PENDING_CANCEL")),(0,r.kt)("p",{parentName:"li"},"The offer is no longer valid if it is in any of the following states:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"CANCELLED"),(0,r.kt)("li",{parentName:"ul"},"CONFIRMED"),(0,r.kt)("li",{parentName:"ul"},"FAILED")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'async def check_offer_validity(self, offer: Offer) -> bool:\n  res = await self.fetch("check_offer_validity", {"offer": bytes(offer).hex()})\n  return res["valid"]\n')),(0,r.kt)("h3",{id:"take_offer"},(0,r.kt)("inlineCode",{parentName:"h3"},"take_offer")),(0,r.kt)("p",null,"Takes (accepts) a specific offer, with a given fee."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"offer:")," The offer to accept. Must be in the PENDING_ACCEPT state."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"fee:")," An optional fee (in mojos) to include with the offer. Defaults to 0.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'async def take_offer(self, offer: Offer, fee=uint64(0)) -> TradeRecord:\n  res = await self.fetch("take_offer", {"offer": bytes(offer).hex(), "fee": fee})\n  return TradeRecord.from_json_dict_convenience(res["trade_record"])\n')),(0,r.kt)("h3",{id:"get_offer"},(0,r.kt)("inlineCode",{parentName:"h3"},"get_offer")),(0,r.kt)("p",null,"Given an offer's unique identifier, return that offer's details."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"trade_id:")," The ID of the offer to examine. Can be retrieved from an offer file by calling ",(0,r.kt)("inlineCode",{parentName:"li"},"cdv inspect spendbundles <offer_file>"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"file_contents:")," Set to True to return a summary for the offer. Defaults to False, which only returns the offer's basic metadata.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'async def get_offer(self, trade_id: bytes32, file_contents: bool = False) -> TradeRecord:\n  res = await self.fetch("get_offer", {"trade_id": trade_id.hex(), "file_contents": file_contents})\n  offer_str = res["offer"] if file_contents else ""\n  return TradeRecord.from_json_dict_convenience(res["trade_record"], offer_str)\n')),(0,r.kt)("h3",{id:"get_all_offers"},(0,r.kt)("inlineCode",{parentName:"h3"},"get_all_offers")),(0,r.kt)("p",null,"Gets all offers for the current wallet. Includes offers in every state."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"file_contents")," Set to True to return a summary for the offer. Defaults to False, which only returns the offer's basic metadata.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'async def get_all_offers(self, file_contents: bool = False) -> List[TradeRecord]:\n  res = await self.fetch("get_all_offers", {"file_contents": file_contents})\n\n  records = []\n  optional_offers = res["offers"] if file_contents else ([""] * len(res["trade_records"]))\n  for record, offer in zip(res["trade_records"], optional_offers):\n    records.append(TradeRecord.from_json_dict_convenience(record, offer))\n\n  return records\n')),(0,r.kt)("h3",{id:"cancel_offer"},(0,r.kt)("inlineCode",{parentName:"h3"},"cancel_offer")),(0,r.kt)("p",null,"Cancel an offer with a specific identifier."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"trade_id:")," The ID of the offer to examine. Can be retrieved from an offer file by calling ",(0,r.kt)("inlineCode",{parentName:"li"},"cdv inspect spendbundles <offer_file>"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"fee:")," An optional fee (in mojos) to include with the cancellation. Defaults to 0."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"secure:")," Defaults to True, which means \"cancel on blockchain,\" ie spend the coins being offered and create new coin's in the Maker's wallet. Set to False to cancel locally. See ",(0,r.kt)("a",{parentName:"li",href:"#cancellation",title:"Offer cancellation"},"cancellation")," for more info.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'async def cancel_offer(self, trade_id: bytes32, fee=uint64(0), secure: bool = True):\n  await self.fetch("cancel_offer", {"trade_id": trade_id.hex(), "secure": secure, "fee": fee})\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"get_notifications"},(0,r.kt)("inlineCode",{parentName:"h3"},"get_notifications")),(0,r.kt)("p",null,"Functionality: Obtain curent notifications"),(0,r.kt)("p",null,"Usage: chia rpc wallet ","[OPTIONS]"," get_notifications ","[REQUEST]"),(0,r.kt)("p",null,"Options:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Short Command"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Long Command"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"-j"),(0,r.kt)("td",{parentName:"tr",align:"left"},"--json-file"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Instead of REQUEST, provide a json file containing the request data")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"-h"),(0,r.kt)("td",{parentName:"tr",align:"left"},"--help"),(0,r.kt)("td",{parentName:"tr",align:"left"},"None"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Show a help message and exit")))),(0,r.kt)("p",null,"Request Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ids"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Set to receive notifications only from the specified IDs. ","[Default: receive from all IDs]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"start"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The number corresponding to the first notification to list. ","[Default: the first notification]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"end"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The number corresponding to the last notification to list. ","[Default: the last notification]")))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Example"),(0,r.kt)("p",null,"If no parameters are set, then all notifications will be listed from all IDs:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"chia rpc wallet get_notifications\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "notifications": [\n        {\n            "amount": 10000000,\n            "id": "f74fb363fbdeef3f6bcf7a0664a8ef76ea3e5f22bb4ffc9a1f9ef23b9329ae28",\n            "message": "fadedcab"\n        }\n    ],\n    "success": true\n}\n'))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"delete_notifications"},(0,r.kt)("inlineCode",{parentName:"h3"},"delete_notifications")),(0,r.kt)("p",null,"Functionality: Delete notifications, with the option to specify IDs from which to delete"),(0,r.kt)("p",null,"Usage: chia rpc wallet ","[OPTIONS]"," delete_notifications ","[REQUEST]"),(0,r.kt)("p",null,"Options:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Short Command"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Long Command"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"-j"),(0,r.kt)("td",{parentName:"tr",align:"left"},"--json-file"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Instead of REQUEST, provide a json file containing the request data")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"-h"),(0,r.kt)("td",{parentName:"tr",align:"left"},"--help"),(0,r.kt)("td",{parentName:"tr",align:"left"},"None"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Show a help message and exit")))),(0,r.kt)("p",null,"Request Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ids"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Set to delete notifications only from the specified IDs. ","[Default: delete from all IDs]")))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"chia rpc wallet delete_notifications\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "success": true\n}\n'))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"send_notification"},(0,r.kt)("inlineCode",{parentName:"h3"},"send_notification")),(0,r.kt)("p",null,"Functionality: Send a notification to a specified puzzle hash"),(0,r.kt)("p",null,"Usage: chia rpc wallet ","[OPTIONS]"," send_notification ","[REQUEST]"),(0,r.kt)("p",null,"Options:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Short Command"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Long Command"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"-j"),(0,r.kt)("td",{parentName:"tr",align:"left"},"--json-file"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Instead of REQUEST, provide a json file containing the request data")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"-h"),(0,r.kt)("td",{parentName:"tr",align:"left"},"--help"),(0,r.kt)("td",{parentName:"tr",align:"left"},"None"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Show a help message and exit")))),(0,r.kt)("p",null,"Request Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"target"),(0,r.kt)("td",{parentName:"tr",align:"left"},"True"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The puzzle hash you would like to send a message to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"message"),(0,r.kt)("td",{parentName:"tr",align:"left"},"True"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The hex-encoded message you would like to send")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"amount"),(0,r.kt)("td",{parentName:"tr",align:"left"},"True"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The number of mojos to include with this message")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"fee"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An optional blockchain fee, in mojos")))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'chia rpc wallet send_notification \'{"target": "8c436f983d5bcbdb92d6d029a4113da580f2fc43b943e92ddf06a9f54e5f5003", "message": "fadedcab", "amount": 10000000, "fee": 10000000}\'\n')),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "success": true,\n    "tx": {\n        "additions": [\n            {\n                "amount": 10000000,\n                "parent_coin_info": "0x7159b046aa0f1af65f561efe6ed1de0beb3341cc28a883892c9bc14d89115ed0",\n                "puzzle_hash": "0x201ef13f780295649cd7e2c8713c575b8dd2568463add6f8d3cfc6b3687d27bd"\n            },\n            {\n                "amount": 249979799998,\n                "parent_coin_info": "0x7159b046aa0f1af65f561efe6ed1de0beb3341cc28a883892c9bc14d89115ed0",\n                "puzzle_hash": "0x970afdde67983d39b55475fa1a6bb24eb23e9ba47681fb693e80dee8c9346a83"\n            }\n        ],\n        "amount": 10000000,\n        "confirmed": false,\n        "confirmed_at_height": 0,\n        "created_at_time": 1667386486,\n        "fee_amount": 10000000,\n        "memos": {\n            "f74fb363fbdeef3f6bcf7a0664a8ef76ea3e5f22bb4ffc9a1f9ef23b9329ae28": "fadedcab"\n        },\n        "name": "0x749898b3efcd50882283fb879e80e42cd59340c41943832b4daf896b5e6e80e4",\n        "removals": [\n            {\n                "amount": 249999799998,\n                "parent_coin_info": "0xf634ab1fc513d90d63c7eed840eb49a034f804b2d910418614776333590aab8c",\n                "puzzle_hash": "0x8c436f983d5bcbdb92d6d029a4113da580f2fc43b943e92ddf06a9f54e5f5003"\n            }\n        ],\n        "sent": 0,\n        "sent_to": [],\n        "spend_bundle": {\n            "aggregated_signature": "0xb9db8ff2e29f00ec98b17019e13f11daea890a8ef82d1019b7655308c14623a0c15d37504b1e742d0f29132e6225c7f505a2c75f93ea0940f50615c3b83c2b851c5a76f5f027c8d823c85df7bea57e3dd702f03e2d8997173c1bb4ca64b97b87",\n            "coin_spends": [\n                {\n                    "coin": {\n                        "amount": 249999799998,\n                        "parent_coin_info": "0xf634ab1fc513d90d63c7eed840eb49a034f804b2d910418614776333590aab8c",\n                        "puzzle_hash": "0x8c436f983d5bcbdb92d6d029a4113da580f2fc43b943e92ddf06a9f54e5f5003"\n                    },\n                    "puzzle_reveal": "0xff02ffff01ff02ffff01ff02ffff03ff0bffff01ff02ffff03ffff09ff05ffff1dff0bffff1effff0bff0bffff02ff06ffff04ff02ffff04ff17ff8080808080808080ffff01ff02ff17ff2f80ffff01ff088080ff0180ffff01ff04ffff04ff04ffff04ff05ffff04ffff02ff06ffff04ff02ffff04ff17ff80808080ff80808080ffff02ff17ff2f808080ff0180ffff04ffff01ff32ff02ffff03ffff07ff0580ffff01ff0bffff0102ffff02ff06ffff04ff02ffff04ff09ff80808080ffff02ff06ffff04ff02ffff04ff0dff8080808080ffff01ff0bffff0101ff058080ff0180ff018080ffff04ffff01b0acc98d7c361cb95a6d16a2ee6a5dccb55d3beab9e7dbb52ebd7e4a94a8290166cf8e745d67a6eb36de6687141da09dccff018080",\n                    "solution": "0xff80ffff01ffff33ffa0201ef13f780295649cd7e2c8713c575b8dd2568463add6f8d3cfc6b3687d27bdff8400989680ffffa08c436f983d5bcbdb92d6d029a4113da580f2fc43b943e92ddf06a9f54e5f5003ff84fadedcab8080ffff33ffa0970afdde67983d39b55475fa1a6bb24eb23e9ba47681fb693e80dee8c9346a83ff853a33f509be80ffff34ff840098968080ffff3cffa0ef1272dc555d2fa0b17eb8a2d50dc507ce1f873de3443f3b7e36a3c802b0863b80ffff3dffa0a2d1d50e1bf8bd6f08e02885631ea6cbe7aa91d9de9809b5c37a7858fc0ad94b8080ff8080"\n                },\n                {\n                    "coin": {\n                        "amount": 10000000,\n                        "parent_coin_info": "0x7159b046aa0f1af65f561efe6ed1de0beb3341cc28a883892c9bc14d89115ed0",\n                        "puzzle_hash": "0x201ef13f780295649cd7e2c8713c575b8dd2568463add6f8d3cfc6b3687d27bd"\n                    },\n                    "puzzle_reveal": "0xff02ffff01ff02ffff01ff04ffff04ff04ffff04ff05ffff04ff0bff80808080ffff04ffff04ff06ffff01ff808080ff808080ffff04ffff01ff333cff018080ffff04ffff01a08c436f983d5bcbdb92d6d029a4113da580f2fc43b943e92ddf06a9f54e5f5003ffff04ffff018400989680ff01808080",\n                    "solution": "0x80"\n                }\n            ]\n        },\n        "to_address": "xch1yq00z0mcq22kf8xhuty8z0zhtwxay45yvwkad7xnelrtx6ray77sshkp7r",\n        "to_puzzle_hash": "0x201ef13f780295649cd7e2c8713c575b8dd2568463add6f8d3cfc6b3687d27bd",\n        "trade_id": null,\n        "type": 1,\n        "wallet_id": 1\n    }\n}\n'))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"sign_message_by_address"},(0,r.kt)("inlineCode",{parentName:"h3"},"sign_message_by_address")),(0,r.kt)("p",null,"Functionality: Sign a message using an XCH address without incurring an on-chain transaction"),(0,r.kt)("p",null,"Usage: chia rpc wallet ","[OPTIONS]"," sign_message_by_address ","[REQUEST]"),(0,r.kt)("p",null,"Options:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Short Command"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Long Command"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"-j"),(0,r.kt)("td",{parentName:"tr",align:"left"},"--json-file"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Instead of REQUEST, provide a json file containing the request data")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"-h"),(0,r.kt)("td",{parentName:"tr",align:"left"},"--help"),(0,r.kt)("td",{parentName:"tr",align:"left"},"None"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Show a help message and exit")))),(0,r.kt)("p",null,"Request Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"True"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The address to use for signing. Must possess the key for this address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"message"),(0,r.kt)("td",{parentName:"tr",align:"left"},"True"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The message to include with the signature")))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'chia rpc wallet sign_message_by_address \'{"address":"xch1q94gd4hd62ecx08d0kuagmp5cr8umrwtcvatfupmd7uyzhuf4c4sy2zd46", "message":"test"}\'\n')),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "pubkey": "814612ec24a4957cf38ee5f5d5bc544820575375d7997da12c07f3f09215a178cfa76f151edba4c0ae40b66a97a6275e",\n    "signature": "a10234b38cc962f9678882f18885fee23a288c389bc0145588f7000bca12b55fcfaffff0cdd4ef7f136f8aab571ddd2e089b281ae267347fb20225d86490e91fbedad59ba9d38f9308f251070ea1260909dd69133273a49650749cfe6ff96d40",\n    "success": true\n}\n'))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"sign_message_by_id"},(0,r.kt)("inlineCode",{parentName:"h3"},"sign_message_by_id")),(0,r.kt)("p",null,"Functionality: Sign a message using a DID or NFT ID without incurring an on-chain transaction"),(0,r.kt)("p",null,"Usage: chia rpc wallet ","[OPTIONS]"," sign_message_by_id ","[REQUEST]"),(0,r.kt)("p",null,"Options:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Short Command"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Long Command"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"-j"),(0,r.kt)("td",{parentName:"tr",align:"left"},"--json-file"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Instead of REQUEST, provide a json file containing the request data")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"-h"),(0,r.kt)("td",{parentName:"tr",align:"left"},"--help"),(0,r.kt)("td",{parentName:"tr",align:"left"},"None"),(0,r.kt)("td",{parentName:"tr",align:"left"},"False"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Show a help message and exit")))),(0,r.kt)("p",null,"Request Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"True"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The DID or NFT ID to use for signing. Must possess the key for this ID")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"message"),(0,r.kt)("td",{parentName:"tr",align:"left"},"True"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The message to include with the signature")))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'chia rpc wallet sign_message_by_id \'{"id":"nft12dfld077vn3ywp4vdx9ljg96k89kpr6jlqwkm7lgaf3g8jwn2l4q6eytqs", "message":"test"}\'\n')),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "pubkey": "a5b35d3370745ae7634022ddd970379b4ed4acdd2d34622f1dfdf2b9923b16ac6e8b317abcf1cc8beb1e882d341e4458",\n    "signature": "843deb871383889bfb8b9b22c0137e9b12cef875e27c998a3def6aa13c9340e2036ae90bbbb9a78894572319bf0fedbc08057849882ca6723834a99bf0e97a5e9f9702c5a02a64434b3550922c488f957036d19af2be2c92eb84c1d5d4f8eba6",\n    "success": true\n}\n'))),(0,r.kt)("hr",null))}c.isMDXComponent=!0}}]);