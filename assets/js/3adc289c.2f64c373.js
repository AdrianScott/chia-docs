"use strict";(self.webpackChunkchia_docs=self.webpackChunkchia_docs||[]).push([[3729],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>f});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),s=d(a),u=l,f=s["".concat(o,".").concat(u)]||s[u]||c[u]||r;return a?n.createElement(f,i(i({ref:t},m),{},{components:a})):n.createElement(f,i({ref:t},m))}));function f(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[s]="string"==typeof e?e:l,i[1]=p;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),l=a(6010);const r="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,i),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>u});var n=a(7462),l=a(7294),r=a(6010),i=a(2389),p=a(7392),o=a(7094),d=a(2466);const m="tabList__CuJ",s="tabItem_LNqP";function c(e){const{lazy:t,block:a,defaultValue:i,values:c,groupId:u,className:f}=e,k=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),N=c??k.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),h=(0,p.l)(N,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===i?i:i??k.find((e=>e.props.default))?.props.value??k[0].props.value;if(null!==g&&!N.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${N.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:y}=(0,o.U)(),[w,D]=(0,l.useState)(g),v=[],{blockElementScrollPositionUntilNextRender:I}=(0,d.o5)();if(null!=u){const e=b[u];null!=e&&e!==w&&N.some((t=>t.value===e))&&D(e)}const T=e=>{const t=e.currentTarget,a=v.indexOf(t),n=N[a].value;n!==w&&(I(t),D(n),null!=u&&y(u,String(n)))},E=e=>{let t=null;switch(e.key){case"Enter":T(e);break;case"ArrowRight":{const a=v.indexOf(e.currentTarget)+1;t=v[a]??v[0];break}case"ArrowLeft":{const a=v.indexOf(e.currentTarget)-1;t=v[a]??v[v.length-1];break}}t?.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",m)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},f)},N.map((e=>{let{value:t,label:a,attributes:i}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>v.push(e),onKeyDown:E,onClick:T},i,{className:(0,r.Z)("tabs__item",s,i?.className,{"tabs__item--active":w===t})}),a??t)}))),t?(0,l.cloneElement)(k.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function u(e){const t=(0,i.Z)();return l.createElement(c,(0,n.Z)({key:String(t)},e))}},5872:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var n=a(7462),l=(a(7294),a(3905));a(5488),a(5162);const r={sidebar_label:"DIDs",title:"DID CLI",slug:"/did-cli"},i=void 0,p={unversionedId:"cli-reference/dids",id:"cli-reference/dids",title:"DID CLI",description:"Note about Windows command escaping",source:"@site/docs/cli-reference/dids.mdx",sourceDirName:"cli-reference",slug:"/did-cli",permalink:"/did-cli",draft:!1,editUrl:"https://github.com/Chia-Network/chia-docs/blob/main/docs/cli-reference/dids.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"DIDs",title:"DID CLI",slug:"/did-cli"},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/cli"},next:{title:"NFTs",permalink:"/nft-cli"}},o={},d=[{value:"Reference",id:"reference",level:2},{value:"<code>create</code>",id:"create",level:3},{value:"<code>get_did</code>",id:"get_did",level:3},{value:"<code>set_name</code>",id:"set_name",level:3}],m={toc:d};function s(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Note about Windows command escaping"),(0,l.kt)("p",null,"This document will use Linux/MacOS RPC syntax. When running rpc commands on Windows, you'll need to escape all quotes with backslashes."),(0,l.kt)("p",null,"For example, here is a typical RPC command on Linux and MacOS:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-powershell"},'chia rpc wallet create_new_wallet \'{"wallet_type": "nft_wallet"}\'\n')),(0,l.kt)("p",null,"To run the same command on Windows, you need to escape the quotes, so it looks like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-powershell"},'chia rpc wallet create_new_wallet \'{\\"wallet_type\\": \\"nft_wallet\\"}\'\n'))),(0,l.kt)("h2",{id:"reference"},"Reference"),(0,l.kt)("h3",{id:"create"},(0,l.kt)("inlineCode",{parentName:"h3"},"create")),(0,l.kt)("p",null,"Functionality: Create a DID wallet"),(0,l.kt)("p",null,"Usage: chia wallet did create ","[OPTIONS]"),(0,l.kt)("p",null,"Options:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Short Command"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Long Command"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-wp"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--wallet-rpc-port"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Set the port where the Wallet is hosting the RPC interface. See the rpc_port under wallet in config.yaml")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-f"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--fingerprint"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Set the fingerprint to specify which wallet to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-n"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Set the DID wallet name ","[default: None]")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-a"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--amount"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Set the DID amount in mojos. Value must be an odd number. ","[default: 1]")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-m"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--fee"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Set the fees per transaction, in XCH. ","[default: 0]")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-h"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--help"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Show a help message and exit.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Example"),(0,l.kt)("p",null,"Create a new DID:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"chia wallet did create -n My_DID\n")),(0,l.kt)("p",null,"Response:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Successfully created a DID wallet with name My_DID and id 2 on key 4288332900\nSuccessfully created a DID did:chia:17jvhl9z8zj6jma2uxk4mqj22p90hfpf29svlvlyalu8ksyefsvpql7f403 in the newly created DID wallet\n")),(0,l.kt)("p",null,"View your wallet and DID:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"chia wallet show\n")),(0,l.kt)("p",null,"Response:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Wallet height: 1117451\nSync status: Synced\nBalances, fingerprint: 4288332900\n\nChia Wallet:\n   -Total Balance:         0.999989999992 txch (999989999992 mojo)\n   -Pending Total Balance: 0.999989999991 txch (999989999991 mojo)\n   -Spendable:             0.0 txch (0 mojo)\n   -Type:                  STANDARD_WALLET\n   -Wallet ID:             1\n\nMy_DID:\n   -Total Balance:         0.0\n   -Pending Total Balance: 1.0\n   -Spendable:             0.0\n   -Type:                  DECENTRALIZED_ID\n   -DID ID:                did:chia:17jvhl9z8zj6jma2uxk4mqj22p90hfpf29svlvlyalu8ksyefsvpql7f403\n   -Wallet ID:             2\n"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"get_did"},(0,l.kt)("inlineCode",{parentName:"h3"},"get_did")),(0,l.kt)("p",null,"Functionality: Get the DID and Coin ID for a DID wallet"),(0,l.kt)("p",null,"Usage: chia wallet did get_did ","[OPTIONS]"),(0,l.kt)("p",null,"Options:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Short Command"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Long Command"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-wp"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--wallet-rpc-port"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Set the port where the Wallet is hosting the RPC interface. See the rpc_port under wallet in config.yaml")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-f"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--fingerprint"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Set the fingerprint to specify which wallet to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-i"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--id"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"ID of the wallet to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-h"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--help"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Show a help message and exit.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Example"),(0,l.kt)("p",null,"Get info for DID with ID 2:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"chia wallet did get_did -i 2\n")),(0,l.kt)("p",null,"Response:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"DID:                    did:chia:17jvhl9z8zj6jma2uxk4mqj22p90hfpf29svlvlyalu8ksyefsvpql7f403\nCoin ID:                0xe6c28c30c7dd2801a4cbfdb0e61186315ae9695dde0a75a6901c1394c3300db8\n"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"set_name"},(0,l.kt)("inlineCode",{parentName:"h3"},"set_name")),(0,l.kt)("p",null,"Functionality: Get the DID and Coin ID for a DID wallet"),(0,l.kt)("p",null,"Usage: chia wallet did get_did ","[OPTIONS]"),(0,l.kt)("p",null,"Options:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Short Command"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Long Command"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-wp"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--wallet-rpc-port"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Set the port where the Wallet is hosting the RPC interface. See the rpc_port under wallet in config.yaml")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-f"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--fingerprint"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Set the fingerprint to specify which wallet to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-i"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--id"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"ID of the wallet to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-n"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Set the DID wallet name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-h"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--help"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Show a help message and exit.")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Example"),(0,l.kt)("p",null,"Set the name for Wallet ID 2 to ",(0,l.kt)("inlineCode",{parentName:"p"},"New Name"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'chia wallet did set_name -i 2 -n "New Name"\n')),(0,l.kt)("p",null,"Response:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Successfully set a new name for DID wallet with id 2: New Name\n")),(0,l.kt)("p",null,"Confirm changes:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"chia wallet show\n")),(0,l.kt)("p",null,"Response:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Wallet height: 1117563\nSync status: Synced\nBalances, fingerprint: 4288332900\n\nChia Wallet:\n   -Total Balance:         0.999989999991 txch (999989999991 mojo)\n   -Pending Total Balance: 0.999989999991 txch (999989999991 mojo)\n   -Spendable:             0.999989999991 txch (999989999991 mojo)\n   -Type:                  STANDARD_WALLET\n   -Wallet ID:             1\n\nNew Name:\n   -Total Balance:         1.0\n   -Pending Total Balance: 1.0\n   -Spendable:             1.0\n   -Type:                  DECENTRALIZED_ID\n   -DID ID:                did:chia:17jvhl9z8zj6jma2uxk4mqj22p90hfpf29svlvlyalu8ksyefsvpql7f403\n   -Wallet ID:             2\n\nConnections:\nType      IP                                     Ports       NodeID      Last Connect      MiB Up|Dwn\nFULL_NODE 127.0.0.1                              58444/58444 f40100b8... Jun 15 12:22:02      0.0|1.7\n                                                 -Height: No Info    -Hash: No Info    -Trusted: True\n"))))}s.isMDXComponent=!0}}]);