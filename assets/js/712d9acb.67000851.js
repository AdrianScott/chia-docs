"use strict";(self.webpackChunkchia_docs=self.webpackChunkchia_docs||[]).push([[8305],{3905:function(t,e,a){a.d(e,{Zo:function(){return p},kt:function(){return c}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var d=n.createContext({}),s=function(t){var e=n.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},p=function(t){var e=s(t.components);return n.createElement(d.Provider,{value:e},t.children)},f={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),u=s(a),c=r,m=u["".concat(d,".").concat(c)]||u[c]||f[c]||l;return a?n.createElement(m,i(i({ref:e},p),{},{components:a})):n.createElement(m,i({ref:e},p))}));function c(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2360:function(t,e,a){a.d(e,{Z:function(){return i}});var n=a(7294),r=a(6010),l="tabItem_OmH5";function i(t){var e=t.children,a=t.hidden,i=t.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},e)}},3029:function(t,e,a){a.d(e,{Z:function(){return c}});var n=a(7462),r=a(7294),l=a(2389),i=a(7392),o=a(7094),d=a(2466),s=a(6010),p="tabList_uSqn",f="tabItem_LplD";function u(t){var e,a,l,u=t.lazy,c=t.block,m=t.defaultValue,k=t.values,g=t.groupId,h=t.className,N=r.Children.map(t.children,(function(t){if((0,r.isValidElement)(t)&&void 0!==t.props.value)return t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof t.type?t.type:t.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=k?k:N.map((function(t){var e=t.props;return{value:e.value,label:e.label,attributes:e.attributes}})),y=(0,i.l)(b,(function(t,e){return t.value===e.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(t){return t.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var T=null===m?m:null!=(e=null!=m?m:null==(a=N.find((function(t){return t.props.default})))?void 0:a.props.value)?e:null==(l=N[0])?void 0:l.props.value;if(null!==T&&!b.some((function(t){return t.value===T})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+T+'" but none of its children has the corresponding value. Available values are: '+b.map((function(t){return t.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=(0,o.U)(),w=v.tabGroupChoices,_=v.setTabGroupChoices,C=(0,r.useState)(T),E=C[0],x=C[1],O=[],A=(0,d.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var I=w[g];null!=I&&I!==E&&b.some((function(t){return t.value===I}))&&x(I)}var z=function(t){var e=t.currentTarget,a=O.indexOf(e),n=b[a].value;n!==E&&(A(e),x(n),null!=g&&_(g,n))},j=function(t){var e,a=null;switch(t.key){case"ArrowRight":var n=O.indexOf(t.currentTarget)+1;a=O[n]||O[0];break;case"ArrowLeft":var r=O.indexOf(t.currentTarget)-1;a=O[r]||O[O.length-1]}null==(e=a)||e.focus()};return r.createElement("div",{className:(0,s.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":c},h)},b.map((function(t){var e=t.value,a=t.label,l=t.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:E===e?0:-1,"aria-selected":E===e,key:e,ref:function(t){return O.push(t)},onKeyDown:j,onFocus:z,onClick:z},l,{className:(0,s.Z)("tabs__item",f,null==l?void 0:l.className,{"tabs__item--active":E===e})}),null!=a?a:e)}))),u?(0,r.cloneElement)(N.filter((function(t){return t.props.value===E}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},N.map((function(t,e){return(0,r.cloneElement)(t,{key:e,hidden:t.props.value!==E})}))))}function c(t){var e=(0,l.Z)();return r.createElement(u,(0,n.Z)({key:String(e)},t))}},5063:function(t,e,a){a.r(e),a.d(e,{assets:function(){return p},contentTitle:function(){return d},default:function(){return c},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return f}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=(a(3029),a(2360),["components"]),o={id:"cat_admin_cli",title:"CAT Admin Tool CLI Reference",sidebar_label:"13.5 CATs CLI Reference",sidebar_position:5},d=void 0,s={unversionedId:"13cli/cat_admin_cli",id:"13cli/cat_admin_cli",title:"CAT Admin Tool CLI Reference",description:"Intro",source:"@site/docs/13cli/cat_admin.mdx",sourceDirName:"13cli",slug:"/13cli/cat_admin_cli",permalink:"/docs/13cli/cat_admin_cli",draft:!1,editUrl:"https://github.com/Chia-Network/chia-docs/blob/main/docs/13cli/cat_admin.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"cat_admin_cli",title:"CAT Admin Tool CLI Reference",sidebar_label:"13.5 CATs CLI Reference",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"13.4 NFT CLI Reference",permalink:"/docs/13cli/nft_cli"},next:{title:"14.1 chia-blockchain",permalink:"/docs/14python-implementation/python-implementation"}},p={},f=[{value:"Intro",id:"intro",level:2},{value:"Reference",id:"reference",level:2},{value:"<code>cats</code>",id:"cats",level:3},{value:"<code>secure_the_bag</code>",id:"secure_the_bag",level:3},{value:"<code>unwind_the_bag</code>",id:"unwind_the_bag",level:3}],u={toc:f};function c(t){var e=t.components,a=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"intro"},"Intro"),(0,l.kt)("p",null,"This document is a reference guide for Chia's CAT Admin Tool, located in the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/Chia-Network/CAT-admin-tool"},"CAT-admin-tool")," repository."),(0,l.kt)("p",null,"To set up your environment (including installing this tool), follow our CATs guide for ",(0,l.kt)("a",{parentName:"p",href:"https://chialisp.com/docs/tutorials/CAT_Launch_Process_Linux_MacOS"},"Linux/MacOS")," and ",(0,l.kt)("a",{parentName:"p",href:"https://chialisp.com/docs/tutorials/CAT_Launch_Process_Windows"},"Windows"),"."),(0,l.kt)("p",null,"If you want to use this tool to reissue CAT1, then follow our ",(0,l.kt)("a",{parentName:"p",href:"https://docs.chia.net/docs/cat2/cat2-issuance"},"CAT2 Token Reissuance guide"),"."),(0,l.kt)("h2",{id:"reference"},"Reference"),(0,l.kt)("h3",{id:"cats"},(0,l.kt)("inlineCode",{parentName:"h3"},"cats")),(0,l.kt)("p",null,"Functionality: Create and administer Chia Asset Tokens (CATs)"),(0,l.kt)("p",null,"Usage: cats ","[OPTIONS]"),(0,l.kt)("p",null,"Options:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Short Command"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Long Command"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-l"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--tail"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The TAIL program to launch this CAT with")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-c"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--curry"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"An argument to curry into the TAIL")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-s"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--solution"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The solution to the TAIL program ","[default: ()]")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-t"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--send-to"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The address these CATs will appear at once they are issued")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-a"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--amount"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The amount to issue in mojos (regular XCH will be used to fund this)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-m"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--fee"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The fees for the transaction, in mojos ","[default: 0]")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-f"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--fingerprint"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The wallet fingerprint to use as funds")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-sig"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--signature"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"A signature to aggregate with the transaction")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-as"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--spend"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"An additional spend to aggregate with the transaction")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-b"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--as-bytes"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Output the spend bundle as a sequence of bytes instead of JSON")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-sc"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--select-coin"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Stop the process once a coin from the wallet has been selected and return the coin")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-q"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--quiet"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Quiet mode will not ask to push transaction to the network")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-p"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--push"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Automatically push transaction to the network in quiet mode")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"--help"),(0,l.kt)("td",{parentName:"tr",align:"left"},"None"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Show a help message and exit")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Example 1 - select a coin from the wallet with a value of at least 1 XCH (1 trillion mojos). "),"Request: ```bash cats --tail ./reference_tails/genesis_by_coin_id.clsp.hex --send-to txch1jk4r06xsj0fnwqk57322yjqzkdyx7kh8h8kvxus3l68tjnkf05aqd9uevs --amount 1000000000000 --as-bytes --select-coin ```",(0,l.kt)("p",null,"Response:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n    "amount": 1999731499999,\n    "parent_coin_info": "0x3179dd9b38f7c4e4de532e346cfefb33affda1f2860ed68aeb0e70c38a5c9f6e",\n    "puzzle_hash": "0x74fcdd0e27ead17559cf9eaf791c62a6517c0c4fcf5ac3a6f014857571fc7608"\n}\nName: 345dd430bcd7a413f8feed25c382d83855edd6ccceb41d1dbc293ca8e49e6b2d\n')),(0,l.kt)("p",null,'The "parent_coin_info", "puzzle_hash", and "amount" values are hashed together to create the coin\'s "Name".')),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Example 2 - Push a transaction to the network, currying an inner puzzle hash into the TAIL"),(0,l.kt)("p",null,"Request:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cats --tail ./reference_tails/genesis_by_coin_id.clsp.hex --send-to txch19k6cl5syzvxgkgulr7m49v2r57yh0aanm23hrffgd89j4nj3ywhqxadyqr --amount 1000000000000 --as-bytes --curry 0x8f4dbff8df3f6aa9303eb47625cf8f09d885f1ad6a2d440582cb6bd45f53d2e8\n")),(0,l.kt)("p",null,"Response:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"The transaction has been created, would you like to push it to the network? (Y/N)y\nSuccessfully pushed the transaction to the network\nAsset ID: 9c39398afb1d7ffa03a589f60e5e39f2ae4572ff7048e689fe3128c339581b2d\nEve Coin ID: 9fe3e95308949cb9c49333f829922dc7118cd3e2fdf365cde669b47852ce3a7b\n")),(0,l.kt)("p",null,"After pushing the transaction, the new ID and Eve Coin (singleton parent coin) will be shown.")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"secure_the_bag"},(0,l.kt)("inlineCode",{parentName:"h3"},"secure_the_bag")),(0,l.kt)("p",null,"Functionality: Create a tree of coins from a .csv file contianing puzzlehash:amount pairs. Useful for setting up CAT airdrops."),(0,l.kt)("p",null,"Usage: secure_the_bag ","[OPTIONS]"),(0,l.kt)("p",null,"Options:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Short Command"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Long Command"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-c"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--curry"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"An argument to curry into the TAIL")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-a"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--amount"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The amount to issue in mojos (regular XCH will be used to fund this)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-stbtp"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--secure-the-bag-targets-path"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Path to CSV file containing targets of secure the bag (inner puzzle hash + amount). The total value of the coins in this file must match the value of the ",(0,l.kt)("inlineCode",{parentName:"td"},"amount")," flag. If they don't match, an error will be thrown.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-lw"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--leaf-width"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Secure the bag leaf width ","[default: 100]")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-pr"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--prefix"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Address prefix ","[default: xch]")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"--help"),(0,l.kt)("td",{parentName:"tr",align:"left"},"NONE"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Show a help message and exit")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Create a coin tree from a .csv file, currying a coin ID that was obtained from the `cats` command"),"```bash secure_the_bag --tail .\\reference_tails\\genesis_by_coin_id.clsp.hex --amount 1000000000000 --secure-the-bag-targets-path C:\\Users\\User\\Downloads\\spacebucks.csv --prefix txch --curry 0x8f4dbff8df3f6aa9303eb47625cf8f09d885f1ad6a2d440582cb6bd45f53d2e8 ```",(0,l.kt)("p",null,"The response will be a list of coins created in the tree. The command's progress will also be displayed. The last two lines of the output will be the root puzzle hash and address of the tree:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"...\nSecure the bag root puzzle hash: 17060adf6856d2904c4fe90c9690b710cf758aee5968718e2fbfd12f7b9d817f\nSecure the bag root address: txch19k6cl5syzvxgkgulr7m49v2r57yh0aanm23hrffgd89j4nj3ywhqxadyqr\n"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"unwind_the_bag"},(0,l.kt)("inlineCode",{parentName:"h3"},"unwind_the_bag")),(0,l.kt)("p",null,"Functionality: Given a coin tree, airdrop CATs to a set of pre-committed puzzle hashes obtained from a .csv file. Requires a coin tree obtained as a result of running the ",(0,l.kt)("inlineCode",{parentName:"p"},"secure_the_bag")," command."),(0,l.kt)("p",null,"Usage: secure_the_bag ","[OPTIONS]"),(0,l.kt)("p",null,"Options:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Short Command"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Long Command"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-ecid"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--eve-coin-id"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"ID of coin that was spent to create secured bag")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-th"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--tail-hash"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TAIL hash / Asset ID of CAT to unwind from secured bag of CATs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-stbtp"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--secure-the-bag-targets-path"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Path to CSV file containing targets of secure the bag (inner puzzle hash + amount)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-utph,"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--unwind-target-puzzle-hash"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TEXT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Puzzle hash of target to unwind from secured bag. This is a useful option for testing a single unwind")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-wi"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--wallet-id"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The wallet id to use (typically ",(0,l.kt)("inlineCode",{parentName:"td"},"1"),")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-f"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--fingerprint"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The wallet fingerprint to use as funds")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-uf"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--unwind-fee"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Fee paid for each unwind spend. Enough mojos must be available to cover all spends ","[default: 500000]")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"-lw"),(0,l.kt)("td",{parentName:"tr",align:"left"},"--leaf-width"),(0,l.kt)("td",{parentName:"tr",align:"left"},"INTEGER"),(0,l.kt)("td",{parentName:"tr",align:"left"},"True"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Secure the bag leaf width (number of tokens to unwind in one block) ","[default: 100]")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"--help"),(0,l.kt)("td",{parentName:"tr",align:"left"},"NONE"),(0,l.kt)("td",{parentName:"tr",align:"left"},"False"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Show a help message and exit")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Unwind a bag that has been secured with the above example, using a puzzle hash"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"unwind_the_bag --eve-coin-id 9fe3e95308949cb9c49333f829922dc7118cd3e2fdf365cde669b47852ce3a7b --tail-hash 9c39398afb1d7ffa03a589f60e5e39f2ae4572ff7048e689fe3128c339581b2d --secure-the-bag-targets-path C:\\Users\\User\\Downloads\\spacebucks.csv --unwind-fee 500000 --wallet-id 1 --unwind-target-puzzle-hash af85d83ff01ec4b6f37d85d038e68736adc6cc9bb2c48c9d0973605448f73f3f\n")),(0,l.kt)("p",null,"This example will airdrop the appropriate number of coins to the given puzzle hash. You will need to confirm each coin as it is dropped.")))}c.isMDXComponent=!0}}]);