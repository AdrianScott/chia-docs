"use strict";(self.webpackChunkchia_docs=self.webpackChunkchia_docs||[]).push([[81],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(a),h=i,m=d["".concat(s,".").concat(h)]||d[h]||u[h]||l;return a?n.createElement(m,r(r({ref:t},c),{},{components:a})):n.createElement(m,r({ref:t},c))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var p=2;p<l;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(7294),i=a(6010);const l="tabItem_Ymn6";function r(e){let{children:t,hidden:a,className:r}=e;return n.createElement("div",{role:"tabpanel",className:(0,i.Z)(l,r),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>h});var n=a(7462),i=a(7294),l=a(6010),r=a(2389),o=a(7392),s=a(7094),p=a(2466);const c="tabList__CuJ",u="tabItem_LNqP";function d(e){var t;const{lazy:a,block:r,defaultValue:d,values:h,groupId:m,className:k}=e,f=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=h??f.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),b=(0,o.l)(g,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===d?d:d??(null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)??f[0].props.value;if(null!==v&&!g.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:N}=(0,s.U)(),[w,C]=(0,i.useState)(v),T=[],{blockElementScrollPositionUntilNextRender:I}=(0,p.o5)();if(null!=m){const e=y[m];null!=e&&e!==w&&g.some((t=>t.value===e))&&C(e)}const O=e=>{const t=e.currentTarget,a=T.indexOf(t),n=g[a].value;n!==w&&(I(t),C(n),null!=m&&N(m,String(n)))},x=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;a=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;a=T[t]??T[T.length-1];break}}null==(t=a)||t.focus()};return i.createElement("div",{className:(0,l.Z)("tabs-container",c)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":r},k)},g.map((e=>{let{value:t,label:a,attributes:r}=e;return i.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>T.push(e),onKeyDown:x,onFocus:O,onClick:O},r,{className:(0,l.Z)("tabs__item",u,null==r?void 0:r.className,{"tabs__item--active":w===t})}),a??t)}))),a?(0,i.cloneElement)(f.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function h(e){const t=(0,r.Z)();return i.createElement(d,(0,n.Z)({key:String(t)},e))}},1478:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>p,toc:()=>u});var n=a(7462),i=(a(7294),a(3905)),l=a(5488),r=a(5162);const o={title:"Quick Start Guide",slug:"/quick-start-guide"},s=void 0,p={unversionedId:"getting-started/quick-start-guide",id:"getting-started/quick-start-guide",title:"Quick Start Guide",description:"Chia is a cryptocurrency and blockchain with smart transaction capabilities. Its PoST consensus is the first (and only) Nakamoto consensus since Proof of Work, and has a much lower energy consumption.",source:"@site/docs/getting-started/quick-start-guide.mdx",sourceDirName:"getting-started",slug:"/quick-start-guide",permalink:"/quick-start-guide",draft:!1,editUrl:"https://github.com/Chia-Network/chia-docs/blob/main/docs/getting-started/quick-start-guide.mdx",tags:[],version:"current",frontMatter:{title:"Quick Start Guide",slug:"/quick-start-guide"},sidebar:"tutorialSidebar",previous:{title:"3. Token Reissuance",permalink:"/cat2-issuance"},next:{title:"Using the GUI",permalink:"/using-the-gui"}},c={},u=[{value:"Install Chia",id:"install",level:2},{value:"Binaries",id:"binaries",level:3},{value:"Source",id:"source",level:3},{value:"CLI Setup",id:"cli-setup",level:2},{value:"Migrate or set up configuration files",id:"migrate-or-set-up-configuration-files",level:3},{value:"Generate keys",id:"generate-keys",level:3},{value:"Run a full node + farmer + harvester + wallet",id:"run-a-full-node--farmer--harvester--wallet",level:3},{value:"Plotting",id:"plotting",level:2},{value:"Tips",id:"tips",level:2},{value:"RPC Interface",id:"rpc-interface",level:2}],d={toc:u};function h(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Chia is a cryptocurrency and blockchain with smart transaction capabilities. Its ",(0,i.kt)("a",{parentName:"p",href:"/consensus-intro"},"PoST consensus")," is the first (and only) Nakamoto consensus since Proof of Work, and has a much ",(0,i.kt)("a",{parentName:"p",href:"https://chiapower.org/"},"lower energy consumption"),"."),(0,i.kt)("p",null,"Chia's mainnet was launched on March 19, 2021. Development of its ecosystem is ongoing, with primitives recently launched for ",(0,i.kt)("a",{parentName:"p",href:"https://chialisp.com/cats"},"CATs"),", ",(0,i.kt)("a",{parentName:"p",href:"https://chialisp.com/offers"},"Offers"),", ",(0,i.kt)("a",{parentName:"p",href:"https://chialisp.com/nfts"},"NFTs")," and ",(0,i.kt)("a",{parentName:"p",href:"https://chialisp.com/dids"},"DIDs"),"."),(0,i.kt)("p",null,"The Chia software is ",(0,i.kt)("a",{parentName:"p",href:"#install"},"easy to install"),". You can start earning cryptocurrency rewards by storing plot files on your hard drive and leaving the machine running."),(0,i.kt)("h2",{id:"install"},"Install Chia"),(0,i.kt)("p",null,"The easiest way to install Chia is to use an installer. However, you can install from source if you want some extra control over the client."),(0,i.kt)("p",null,"For more detailed steps you can follow ",(0,i.kt)("a",{parentName:"p",href:"/chia-installation-guide"},"these install instructions")," according to your operating system. This software only supports 64 bit operating systems."),(0,i.kt)("h3",{id:"binaries"},"Binaries"),(0,i.kt)(l.Z,{defaultValue:"installer",groupId:"install",values:[{label:"Installer",value:"installer"},{label:"APT",value:"apt"},{label:"YUM",value:"yum"},{label:"DNF",value:"dnf"}],mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"installer",mdxType:"TabItem"},(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://download.chia.net/latest/Setup-Win64.exe"},"Windows")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://download.chia.net/latest/Setup-MacOS-arm64.dmg"},"macOS Apple Silicon")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://download.chia.net/latest/Setup-MacOS.dmg"},"macOS Intel")," ",(0,i.kt)("em",{parentName:"li"},"[Catalina 10.15 and later]")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://download.chia.net/install/Chia-1.5.0-10.14-intel.dmg"},"macOS Intel")," ",(0,i.kt)("em",{parentName:"li"},"[Mojave 10.14]")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://download.chia.net/latest/x86_64-Ubuntu-gui"},"Ubuntu/Debian")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://download.chia.net/latest/ARM64-Ubuntu-gui"},"Ubuntu/Debian ARM")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://download.chia.net/latest/x86_64-Redhat-gui"},"CentOS/Redhat"))),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"For convenience, direct links are provided to the latest installer builds. However, you should always visit ",(0,i.kt)("a",{parentName:"p",href:"https://www.chia.net/download/"},"https://www.chia.net/download/")," to verify the checksum of the download."))),(0,i.kt)(r.Z,{value:"apt",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# Install packages\nsudo apt-get update\nsudo apt-get install ca-certificates curl gnupg\n\n# Add GPG key\ncurl -sL https://repo.chia.net/FD39E6D3.pubkey.asc | sudo gpg --dearmor -o /usr/share/keyrings/chia.gpg\n\n# Set up repository\necho "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/chia.gpg] https://repo.chia.net/debian/ stable main" | sudo tee /etc/apt/sources.list.d/chia.list > /dev/null\nsudo apt-get update\n\n# Install chia-blockchain\nsudo apt-get install chia-blockchain\n\n# Use chia-blockchain-cli instead for CLI only\n'))),(0,i.kt)(r.Z,{value:"yum",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Install packages\nsudo yum install -y yum-utils\nsudo yum-config-manager --add-repo https://repo.chia.net/rhel/chia-blockchain.repo\n\n# Install chia-blockchain\nsudo yum install chia-blockchain\n\n# Use chia-blockchain-cli for CLI only\n"))),(0,i.kt)(r.Z,{value:"dnf",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Install packages\nsudo dnf install 'dnf-command(config-manager)'\nsudo dnf config-manager --add-repo https://repo.chia.net/rhel/chia-blockchain.repo\n\n# Install chia-blockchain\nsudo dnf install chia-blockchain\n\n# Use chia-blockchain-cli for CLI only\n")))),(0,i.kt)("h3",{id:"source"},"Source"),(0,i.kt)(l.Z,{defaultValue:"linux-macos-source",groupId:"source",values:[{label:"Linux/MacOS Source",value:"linux-macos-source"},{label:"Windows Source",value:"windows-source"},{label:"Developer Builds",value:"developer-builds"}],mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"linux-macos-source",mdxType:"TabItem"},(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Make sure you have Python 3.9 installed.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Download chia-blockchain\ngit clone https://github.com/Chia-Network/chia-blockchain\n\n# Install dependencies\nsh install.sh\n\n# Create virtual environment\npython3 -m venv venv\n\n# Activate virtual environment\n. ./venv/bin/activate\n\n# Initialize\nchia init\n"))),(0,i.kt)(r.Z,{value:"windows-source",mdxType:"TabItem"},(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Make sure you have Python 3.9 and Git installed.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Download chia-blockchain\ngit clone https://github.com/Chia-Network/chia-blockchain\n\n# Install dependencies\n./Install.ps1\n\n# Create virtual environment\npy -m venv venv\n\n# Activate virtual environment\n. ./venv/Scripts/Activate.ps1\n\n# Initialize\nchia init\n"))),(0,i.kt)(r.Z,{value:"developer-builds",mdxType:"TabItem"},(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://download.chia.net/latest-dev/ChiaSetup-latest-dev.exe"},"Windows")," ",(0,i.kt)("em",{parentName:"li"},"Dev build")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://download.chia.net/latest-dev/Chia-arm64_latest_dev.dmg"},"macOS Apple Silicon")," ",(0,i.kt)("em",{parentName:"li"},"Dev build")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://download.chia.net/latest-dev/Chia-intel_latest_dev.dmg"},"macOS Intel")," ",(0,i.kt)("em",{parentName:"li"},"Dev build")," ",(0,i.kt)("em",{parentName:"li"},"[Catalina 10.15 and later]")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://download.chia.net/latest-dev/chia-blockchain_amd64_latest_dev.deb"},"Ubuntu/Debian")," ",(0,i.kt)("em",{parentName:"li"},"Dev build")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://download.chia.net/latest-dev/chia-blockchain_arm64_latest_dev.deb"},"Ubuntu/Debian ARM")," ",(0,i.kt)("em",{parentName:"li"},"Dev build")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://download.chia.net/latest-dev/chia-blockchain-1.x86_64_latest_dev.rpm"},"CentOS/Redhat")," ",(0,i.kt)("em",{parentName:"li"},"Dev build"))),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"For convenience, direct links are provided to the latest installer builds. However, you should always visit ",(0,i.kt)("a",{parentName:"p",href:"https://www.chia.net/download/"},"https://www.chia.net/download/")," to verify the checksum of the download.")))),(0,i.kt)("p",null,"All configuration data is stored in a directory structure at the ",(0,i.kt)("inlineCode",{parentName:"p"},"$CHIA_ROOT")," environment variable or at ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.chia/mainnet/"),". You can find databases, and logs there. Optionally, you can set ",(0,i.kt)("inlineCode",{parentName:"p"},"$CHIA_ROOT")," to the ",(0,i.kt)("inlineCode",{parentName:"p"},".chia")," directory in your home directory with ",(0,i.kt)("inlineCode",{parentName:"p"},"export CHIA_ROOT=~/.chia")," and if you add it to your ",(0,i.kt)("inlineCode",{parentName:"p"},".bashrc")," or ",(0,i.kt)("inlineCode",{parentName:"p"},".zshrc")," it will remain set across logouts and reboots. If you set ",(0,i.kt)("inlineCode",{parentName:"p"},"$CHIA_ROOT")," you will have to migrate configuration items by hand or unset the variable for ",(0,i.kt)("inlineCode",{parentName:"p"},"chia init")," to work with ",(0,i.kt)("inlineCode",{parentName:"p"},"unset CHIA_ROOT"),"."),(0,i.kt)("p",null,"If you are using the MacOS or Windows builds, your keys are created during the first run. We recommend writing down the mnemonic (24 ordered words)."),(0,i.kt)("h2",{id:"cli-setup"},"CLI Setup"),(0,i.kt)("p",null,"Using the CLI with Chia gives you greater and more precise control. For a more details on the commands, read the ",(0,i.kt)("a",{parentName:"p",href:"/cli"},"CLI Commands Reference"),"."),(0,i.kt)(l.Z,{mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"MacOS / Linux",label:"MacOS / Linux",default:!0,mdxType:"TabItem"},(0,i.kt)("p",null,"There are commands available in ",(0,i.kt)("inlineCode",{parentName:"p"},"/Applications/Chia.app/Contents/Resources/app.asar.unpacked/daemon"),"."),(0,i.kt)("p",null,"Try ",(0,i.kt)("inlineCode",{parentName:"p"},"./chia -h")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"./chia plots -h")," for example. You can view your debug.log as it runs in from the terminal with ",(0,i.kt)("inlineCode",{parentName:"p"},"tail -f ~/.chia/mainnet/log/debug.log"),". Additionally, you can open the file with Console application."),(0,i.kt)("p",null,"A handy trick is to add that directory to your path - ",(0,i.kt)("inlineCode",{parentName:"p"},"export PATH=/Applications/Chia.app/Contents/Resources/app.asar.unpacked/daemon:$PATH"),". To make it persistent add the same line to your ",(0,i.kt)("inlineCode",{parentName:"p"},".bashrc")," or ",(0,i.kt)("inlineCode",{parentName:"p"},".zshrc")," inside of your user directory.")),(0,i.kt)(r.Z,{value:"Windows",label:"Windows",mdxType:"TabItem"},(0,i.kt)("p",null,"You can learn how to use the Graphical User Interface (GUI) in the ",(0,i.kt)("a",{parentName:"p",href:"/using-the-gui"},"Using the GUI page"),"."),(0,i.kt)("p",null,"You can start with the Command Line Interface (CLI) by checking the commands available in ",(0,i.kt)("inlineCode",{parentName:"p"},"~\\AppData\\Local\\Chia-Blockchain\\app-1.1.5\\resources\\app.asar.unpacked\\daemon\\"),". Try ",(0,i.kt)("inlineCode",{parentName:"p"},".\\chia -h")," or ",(0,i.kt)("inlineCode",{parentName:"p"},".\\chia plots -h")," for example:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open ",(0,i.kt)("em",{parentName:"p"},"PowerShell")),(0,i.kt)("p",{parentName:"li"},'On start menu type "powershell" and press the enter key.')),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Change Directory with ",(0,i.kt)("inlineCode",{parentName:"p"},"cd")),(0,i.kt)("p",{parentName:"li"},"On ",(0,i.kt)("em",{parentName:"p"},"PowerShell")," type ",(0,i.kt)("inlineCode",{parentName:"p"},"cd $env:localAPPDATA\\Chia-Blockchain\\app-1.1.5\\resources\\app.asar.unpacked\\daemon\\")," and press the enter key.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Read Chia help"),(0,i.kt)("p",{parentName:"li"},"On ",(0,i.kt)("em",{parentName:"p"},"PowerShell")," type ",(0,i.kt)("inlineCode",{parentName:"p"},".\\chia -h")," and press the enter key."))),(0,i.kt)("p",null,"For more information you can read the ",(0,i.kt)("a",{parentName:"p",href:"/cli"},"CLI Commands Reference page"),"."),(0,i.kt)("p",null,"You can view your logs by opening ",(0,i.kt)("inlineCode",{parentName:"p"},"\\.chia\\mainnet\\log\\debug.log")," with a text editor like ",(0,i.kt)("em",{parentName:"p"},"Visual Studio Code")," or see it as it runs in ",(0,i.kt)("em",{parentName:"p"},"PowerShell")," by using Get-Content, ",(0,i.kt)("inlineCode",{parentName:"p"},"Get-Content ~\\.chia\\mainnet\\log\\debug.log -wait"),".")),(0,i.kt)(r.Z,{value:"Linux",label:"Linux",mdxType:"TabItem"},(0,i.kt)("p",null,"If you installed Chia with the Linux installer files, your Chia executable should be in one of the following locations:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"/usr/lib/chia-blockchain/resources/app.asar.unpacked/daemon/chia")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"/lib/chia-blockchain/resources/app.asar.unpacked/daemon/chia")),(0,i.kt)("p",null,"If you installed from source (using git), just activate and run ",(0,i.kt)("inlineCode",{parentName:"p"},"chia")," directly."))),(0,i.kt)("h3",{id:"migrate-or-set-up-configuration-files"},"Migrate or set up configuration files"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"chia init\n")),(0,i.kt)("h3",{id:"generate-keys"},"Generate keys"),(0,i.kt)("p",null,"Create some keys by running the following script if you don't already have keys:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"chia keys generate\n")),(0,i.kt)("h3",{id:"run-a-full-node--farmer--harvester--wallet"},"Run a full node + farmer + harvester + wallet"),(0,i.kt)("p",null,"To run a full node on port 8444, and connect to the mainnet, run the following command. Logs are usually at ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.chia/mainnet/logs/debug.log")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"~\\.chia\\mainnet\\logs\\debug.log")," on Windows"),(0,i.kt)("p",null,"Headless:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"chia start farmer\n")),(0,i.kt)("p",null,"GUI:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sh install-gui.sh\ncd chia-blockchain-gui\nnpm run electron &\n")),(0,i.kt)("p",null,"Farmers are entities in the network who use their drive space to try to create\nblocks (like Bitcoin's miners), and earn block rewards."),(0,i.kt)("h2",{id:"plotting"},"Plotting"),(0,i.kt)("p",null,"Plotting is the process of creating plots to be farmed. Once a plot is created, it can be farmed indefinately. In other words, you do not have to plot forever, just plot until you are out of storage."),(0,i.kt)("p",null,"Reference our ",(0,i.kt)("a",{parentName:"p",href:"/plotting-basics"},"plotting guide")," for more details."),(0,i.kt)("p",null,"You can use the command line tools and change the working directories and output directory for plotting, with the ",(0,i.kt)("inlineCode",{parentName:"p"},"-t")," (temp), ",(0,i.kt)("inlineCode",{parentName:"p"},"-2")," (second temp), and ",(0,i.kt)("inlineCode",{parentName:"p"},"-d")," (destination) arguments to the ",(0,i.kt)("inlineCode",{parentName:"p"},"chia plots create")," command. ",(0,i.kt)("inlineCode",{parentName:"p"},"-n 2")," will create two plots of type k=32."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"chia plots create -k 32 -n 2\nchia plots check -n 30\n")),(0,i.kt)("h2",{id:"tips"},"Tips"),(0,i.kt)("p",null,"Ubuntu 20.04 LTS or newer, Amazon Linux 2, and CentOS 7.7 or newer are the\neasiest linux install environments."),(0,i.kt)("p",null,"UPnP is enabled by default to open port 8444 for incoming connections.\nIf this causes issues, you can disable it in ",(0,i.kt)("inlineCode",{parentName:"p"},"config.yaml"),". Or you can run this command: ",(0,i.kt)("inlineCode",{parentName:"p"},"chia configure -upnp false"),"\nSome routers may require port forwarding, or enabling UPnP\nin the router's configuration."),(0,i.kt)("h2",{id:"rpc-interface"},"RPC Interface"),(0,i.kt)("p",null,"The Node has an ",(0,i.kt)("a",{parentName:"p",href:"/full-node-rpc"},"RPC interface"),". This RPC will allow you to interact with the Chia node through code."))}h.isMDXComponent=!0}}]);